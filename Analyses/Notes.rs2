<rst>  <header>    <relations>      <rel name="???" type="rst">      <rel name="essential" type="rst">      <rel name="high" type="rst">      <rel name="medium" type="rst">      <rel name="low" type="rst">      <rel name="background" type="rst">      <rel name="circumstance" type="rst">      <rel name="comment" type="rst">      <rel name="elaboration" type="rst">      <rel name="particularise" type="rst">      <rel name="generalise" type="rst">      <rel name="instantiate" type="rst">      <rel name="exemplify" type="rst">      <rel name="detail" type="rst">      <rel name="re-state" type="rst">      <rel name="evidence" type="rst">      <rel name="purpose" type="rst">      <rel name="reason" type="rst">      <rel name="result" type="rst">      <rel name="cause" type="rst">      <rel name="condition" type="rst">      <rel name="correction" type="rst">      <rel name="counter-expectation" type="rst">      <rel name="concession" type="rst">      <rel name="comparison" type="rst">      <rel name="method" type="rst">      <rel name="matter" type="rst">      <rel name="role" type="rst">      <rel name="accompaniment" type="rst">      <rel name="event-time" type="rst">      <rel name="temporal-location" type="rst">      <rel name="temporal-extent" type="rst">      <rel name="cooccurrence" type="rst">      <rel name="spatial-location" type="rst">      <rel name="spatial-extent" type="rst">      <rel name="person-description" type="rst">      <rel name="agent" type="rst">      <rel name="affected" type="rst">      <rel name="owner" type="rst">      <rel name="cue" type="rst">      <rel name="summary-marker" type="rst">      <rel name="figure" type="rst">      <rel name="manner" type="rst">      <rel name="exception" type="rst">      <rel name="conjunction" type="multinuc">      <rel name="disjunction" type="multinuc">      <rel name="sequence" type="multinuc">      <rel name="joint" type="multinuc">      <rel name="contrast" type="multinuc">      <rel name="title" schema="Paper">      <rel name="author" schema="Paper">      <rel name="institution" schema="Paper">      <rel name="abstract" schema="Paper">      <rel name="section" schema="Paper">      <rel name="references" schema="Paper">      <rel name="heading" schema="Section">      <rel name="heading2" schema="Section">      <rel name="point" schema="Section">      <rel name="summary" schema="Section">      <rel name="item" schema="Blist">      <rel name="graphic" schema="Figure">      <rel name="caption" schema="Figure">      <rel name="subject" schema="Clause">      <rel name="predicate" schema="Clause">    </relations>  </header>  <body>    <segment id=1 parent=26 relname="span">1. Codings are usually stored with scheme embedded,</segment>    <segment id=13 parent=1 relname="manner"> in a xml form, </segment>    <segment id=2 parent=26 relname="exception"> except where the scheme section refers to some external master scheme.</segment>    <segment id=3 parent=28 relname="joint">2. Where a relation is used in a coding,</segment>    <segment id=14 parent=28 relname="joint"> and not defined in the scheme,</segment>    <segment id=15 parent=29 relname="span"> a warning is given,</segment>    <segment id=16 parent=30 relname="joint"> and it is coded as a ???</segment>    <segment id=9 parent=40 relname="point">3. The scheme of the current file can be saved-as Master.</segment>    <segment id=4 parent=31 relname="span">4. We can import a scheme</segment>    <segment id=17 parent=4 relname="spatial-location"> from another file or master.</segment>    <segment id=5 parent=32 relname="span">5. We can import parts of scheme</segment>    <segment id=18 parent=5 relname="manner"> as in Microsoft's Style Manager.</segment>    <segment id=6 parent=41 relname="heading">SEGMENTATION</segment>    <segment id=11 parent=33 relname="span">1. Start with all</segment>    <segment id=19 parent=34 relname="span"> as an undifferentiated whole,</segment>    <segment id=20 parent=19 relname="elaboration"> index 1.</segment>    <segment id=12 parent=35 relname="circumstance">2. Whenever a segment mark is inserted,</segment>    <segment id=21 parent=35 relname="joint"> the first partkeeps the index,</segment>    <segment id=22 parent=35 relname="joint"> the remaining is untagged,</segment>    <segment id=23 parent=35 relname="joint"> and retaggedwith a new-tag.</segment>    <segment id=7 parent=39 relname="joint">3. Tags should always run from 1 up,</segment>    <segment id=24 parent=25 relname="circumstance"> when a tag is deleted,</segment>    <segment id=25 parent=37 relname="span">it is put onto the waiting tag list.</segment>    <segment id=8 parent=37 relname="exception"> Else the nexttag is incremented.</segment><group id=26 type="span" parent=27 relname="span"><group id=27 type="span" parent=40 relname="point"><group id=28 type="multinuc" parent=15 relname="circumstance"><group id=29 type="span" parent=30 relname="joint"><group id=30 type="multinuc" parent=40 relname="point"><group id=31 type="span" parent=40 relname="point"><group id=32 type="span" parent=40 relname="point"><group id=33 type="span" parent=41 relname="point"><group id=34 type="span" parent=11 relname="circumstance"><group id=35 type="multinuc" parent=36 relname="span"><group id=36 type="span" parent=41 relname="point"><group id=37 type="span" parent=38 relname="span"><group id=38 type="span" parent=39 relname="joint"><group id=39 type="multinuc" parent=41 relname="point"><group id=40 type="constit"><group id=41 type="constit">  </body></rst>